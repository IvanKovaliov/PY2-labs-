using System;
using System.Collections;
using System.Collections.Generic;

// Класс Data с полями char, string, long
public class Data : IComparable<Data>
{
    public char Field1 { get; set; }
    public string Field2 { get; set; }
    public long Field3 { get; set; }

    // Реализация метода CompareTo для сортировки по полю Field2 (string)
    public int CompareTo(Data other)
    {
        return this.Field2.CompareTo(other.Field2);
    }

    // Переопределение метода ToString для удобного вывода
    public override string ToString()
    {
        return $"Field1: {Field1}, Field2: {Field2}, Field3: {Field3}";
    }
}

// Класс DataList, содержащий список объектов Data
public class DataList : IEnumerable<Data>
{
    private List<Data> dataList = new List<Data>();

    // Метод для добавления элемента в список
    public void Add(Data data)
    {
        dataList.Add(data);
    }

    // Метод для сортировки списка по полю Field2
    public void Sort()
    {
        dataList.Sort();
    }

    // Реализация интерфейса IEnumerable<Data>
    public IEnumerator<Data> GetEnumerator()
    {
        return dataList.GetEnumerator();
    }

    // Реализация необобщенного метода GetEnumerator
    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }
}

class Program
{
    static void Main(string[] args)
    {
        // Создание объекта DataList
        DataList list = new DataList();

        // Добавление нескольких объектов Data в список
        list.Add(new Data { Field1 = 'A', Field2 = "Zebra", Field3 = 100 });
        list.Add(new Data { Field1 = 'B', Field2 = "Apple", Field3 = 200 });
        list.Add(new Data { Field1 = 'C', Field2 = "Banana", Field3 = 300 });

        // Вывод исходного списка
        Console.WriteLine("Исходный список:");
        foreach (var data in list)
        {
            Console.WriteLine(data);
        }

        // Сортировка списка по полю Field2
        list.Sort();

        // Вывод отсортированного списка
        Console.WriteLine("\nОтсортированный список:");
        foreach (var data in list)
        {
            Console.WriteLine(data);
        }
    }
}