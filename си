using System;

class SquareMatrix
{
    private int[,] matrix;
    private int size;

    public SquareMatrix(int size)
    {
        this.size = size;
        matrix = new int[size, size];
        Random random = new Random();
        for (int i = 0; i < size; i++)
        {
            for (int j = 0; j < size; j++)
            {
                matrix[i, j] = random.Next(-3, 4); // Генерация чисел от -3 до 3
            }
        }
    }

    public int SumOfMainDiagonal()
    {
        int sum = 0;
        for (int i = 0; i < size; i++)
        {
            sum += matrix[i, i];
        }
        return sum;
    }

    public void SwapRows(int row1, int row2)
    {
        for (int j = 0; j < size; j++)
        {
            int temp = matrix[row1, j];
            matrix[row1, j] = matrix[row2, j];
            matrix[row2, j] = temp;
        }
    }

    public int SumOfPositiveElements
    {
        get
        {
            int sum = 0;
            for (int i = 0; i < size; i++)
            {
                for (int j = 0; j < size; j++)
                {
                    if (matrix[i, j] > 0)
                    {
                        sum += matrix[i, j];
                    }
                }
            }
            return sum;
        }
    }

    public void PrintMatrix()
    {
        for (int i = 0; i < size; i++)
        {
            for (int j = 0; j < size; j++)
            {
                Console.Write(matrix[i, j] + "\t");
            }
            Console.WriteLine();
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        SquareMatrix matrix = new SquareMatrix(4);
        Console.WriteLine("Исходная матрица:");
        matrix.PrintMatrix();

        Console.WriteLine("Сумма элементов главной диагонали: " + matrix.SumOfMainDiagonal());

        matrix.SwapRows(0, 2);
        Console.WriteLine("Матрица после замены строк 0 и 2:");
        matrix.PrintMatrix();

        Console.WriteLine("Сумма всех положительных элементов: " + matrix.SumOfPositiveElements);
    }
}