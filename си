#include <windows.h>
#include <commctrl.h>
#include <tchar.h>

#pragma comment(lib, "comctl32.lib")

#define ID_BUTTON 1001
#define ID_STATIC 1002
#define ID_GROUP 1003
#define ID_RED 1004
#define ID_GREEN 1005
#define ID_BLUE 1006
#define ID_SCROLL 1007
#define ID_LIST 1008
#define ID_COMBO 1009

HINSTANCE hInst;
HWND hStatic, hGroup, hScroll, hList, hCombo;
static HWND hRedBtn, hGreenBtn, hBlueBtn;
static int colorCode = 0;

LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam);
void AddControls(HWND hwnd);

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {
    hInst = hInstance;
    HWND hwnd;
    MSG messages;
    WNDCLASSEX wincl;

    wincl.hInstance = hInstance;
    wincl.lpszClassName = _T("WindowsApp");
    wincl.lpfnWndProc = WndProc;
    wincl.style = CS_HREDRAW | CS_VREDRAW;
    wincl.cbSize = sizeof(WNDCLASSEX);
    wincl.hIcon = LoadIcon(NULL, IDI_APPLICATION);
    wincl.hIconSm = LoadIcon(NULL, IDI_APPLICATION);
    wincl.hCursor = LoadCursor(NULL, IDC_ARROW);
    wincl.lpszMenuName = NULL;
    wincl.cbClsExtra = 0;
    wincl.cbWndExtra = 0;
    wincl.hbrBackground = (HBRUSH)(COLOR_BTNFACE + 1);

    RegisterClassEx(&wincl);
    hwnd = CreateWindowEx(
        0,
        _T("WindowsApp"),
        _T("Приложение на WinAPI"),
        WS_OVERLAPPEDWINDOW | WS_VISIBLE,
        CW_USEDEFAULT, CW_USEDEFAULT, 500, 400,
        HWND_DESKTOP, NULL, hInstance, NULL
    );

    while (GetMessage(&messages, NULL, 0, 0)) {
        TranslateMessage(&messages);
        DispatchMessage(&messages);
    }
    return messages.wParam;
}

LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam) {
    switch (msg) {
        case WM_CREATE:
            AddControls(hwnd);
            break;

        case WM_COMMAND:
            if (LOWORD(wParam) == ID_BUTTON) {
                TCHAR buffer[256];
                GetWindowText(hStatic, buffer, 256);
                MessageBox(hwnd, buffer, _T("Данные статического текста"), MB_OK);
            }
            break;

        case WM_HSCROLL:
            if ((HWND)lParam == hScroll) {
                int pos = GetScrollPos(hScroll, SB_CTL);
                pos = (LOWORD(wParam) == SB_LINELEFT) ? pos - 1 : pos + 1;
                SetScrollPos(hScroll, SB_CTL, pos, TRUE);
                InvalidateRect(hwnd, NULL, TRUE);
            }
            break;

        case WM_PAINT:
            {
                PAINTSTRUCT ps;
                HDC hdc = BeginPaint(hwnd, &ps);
                // Отображение цветов и текста
                EndPaint(hwnd, &ps);
            }
            break;

        case WM_DESTROY:
            PostQuitMessage(0);
            break;

        default:
            return DefWindowProc(hwnd, msg, wParam, lParam);
    }
    return 0;
}

void AddControls(HWND hwnd) {
    hStatic = CreateWindowEx(0, _T("STATIC"), _T("Положение окна: "), WS_CHILD | WS_VISIBLE, 10, 10, 200, 20, hwnd, (HMENU)ID_STATIC, hInst, NULL);
    CreateWindowEx(0, _T("BUTTON"), _T("Закрыть приложение"), WS_CHILD | WS_VISIBLE | BS_AUTOCHECKBOX, 10, 40, 150, 30, hwnd, (HMENU)ID_BUTTON, hInst, NULL);

    hGroup = CreateWindowEx(0, _T("BUTTON"), _T("Выберите цвет"), WS_CHILD | WS_VISIBLE | BS_GROUPBOX, 10, 80, 200, 100, hwnd, (HMENU)ID_GROUP, hInst, NULL);
    hRedBtn = CreateWindowEx(0, _T("BUTTON"), _T("Красный"), WS_CHILD | WS_VISIBLE | BS_AUTORADIOBUTTON, 20, 100, 100, 30, hwnd, (HMENU)ID_RED, hInst, NULL);
    hGreenBtn = CreateWindowEx(0, _T("BUTTON"), _T("Зеленый"), WS_CHILD | WS_VISIBLE | BS_AUTORADIOBUTTON, 20, 130, 100, 30, hwnd, (HMENU)ID_GREEN, hInst, NULL);
    hBlueBtn = CreateWindowEx(0, _T("BUTTON"), _T("Синий"), WS_CHILD | WS_VISIBLE | BS_AUTORADIOBUTTON, 20, 160, 100, 30, hwnd, (HMENU)ID_BLUE, hInst, NULL);

    hScroll = CreateWindowEx(0, _T("SCROLLBAR"), NULL, WS_CHILD | WS_VISIBLE | SBS_HORZ, 10, 220, 200, 30, hwnd, (HMENU)ID_SCROLL, hInst, NULL);
    SetScrollRange(hScroll, SB_CTL, 0, 255, TRUE);

    hList = CreateWindowEx(0, _T("LISTBOX"), NULL, WS_CHILD | WS_VISIBLE | LBS_STANDARD, 220, 10, 250, 200, hwnd, (HMENU)ID_LIST, hInst, NULL);
    hCombo = CreateWindowEx(0, _T("COMBOBOX"), NULL, WS_CHILD | WS_VISIBLE | CBS_DROPDOWN, 220, 220, 250, 200, hwnd, (HMENU)ID_COMBO, hInst, NULL);

    SendMessage(hCombo, CB_ADDSTRING, 0, (LPARAM)_T("Приложение 1"));
    SendMessage(hCombo, CB_ADDSTRING, 0, (LPARAM)_T("Приложение 2"));
    SendMessage(hCombo, CB_ADDSTRING, 0, (LPARAM)_T("Приложение 3"));
}
